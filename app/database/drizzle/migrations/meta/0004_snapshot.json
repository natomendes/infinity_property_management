{
  "id": "ae838b67-450d-4716-a65f-2c6b05774c16",
  "prevId": "02ed566e-9182-4ccb-8656-1ace89567a84",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.listings": {
      "name": "listings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "short_id": {
          "name": "short_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "internal_name": {
          "name": "internal_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "property_type_id": {
          "name": "property_type_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "listing_type_id": {
          "name": "listing_type_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "subtype": {
          "name": "subtype",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "multilang_title": {
          "name": "multilang_title",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "multilang_description": {
          "name": "multilang_description",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "multilang_house_rules_desc": {
          "name": "multilang_house_rules_desc",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "multilang_summary_desc": {
          "name": "multilang_summary_desc",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "multilang_notes_desc": {
          "name": "multilang_notes_desc",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "multilang_space_desc": {
          "name": "multilang_space_desc",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "multilang_access_desc": {
          "name": "multilang_access_desc",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "multilang_interaction_desc": {
          "name": "multilang_interaction_desc",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "multilang_neighborhood_overview_desc": {
          "name": "multilang_neighborhood_overview_desc",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "multilang_transit_desc": {
          "name": "multilang_transit_desc",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "address_additional": {
          "name": "address_additional",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_city": {
          "name": "address_city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_country_code": {
          "name": "address_country_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_street_number": {
          "name": "address_street_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "address_region": {
          "name": "address_region",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_state": {
          "name": "address_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_state_code": {
          "name": "address_state_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_street": {
          "name": "address_street",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_zip": {
          "name": "address_zip",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "latitude": {
          "name": "latitude",
          "type": "numeric(10, 7)",
          "primaryKey": false,
          "notNull": false
        },
        "longitude": {
          "name": "longitude",
          "type": "numeric(10, 7)",
          "primaryKey": false,
          "notNull": false
        },
        "main_image_id": {
          "name": "main_image_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "square_footage": {
          "name": "square_footage",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "amenity_ids": {
          "name": "amenity_ids",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "property_amenity_ids": {
          "name": "property_amenity_ids",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "custom_fields": {
          "name": "custom_fields",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "main_currency": {
          "name": "main_currency",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fees_config": {
          "name": "fees_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "pet_fee_config": {
          "name": "pet_fee_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "security_deposit": {
          "name": "security_deposit",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "guests_included": {
          "name": "guests_included",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "extra_guests_config": {
          "name": "extra_guests_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "cancellation_policy_config": {
          "name": "cancellation_policy_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "instant_booking_enabled": {
          "name": "instant_booking_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "check_in_time": {
          "name": "check_in_time",
          "type": "time",
          "primaryKey": false,
          "notNull": false
        },
        "check_in_time_end": {
          "name": "check_in_time_end",
          "type": "time",
          "primaryKey": false,
          "notNull": false
        },
        "check_out_time_start": {
          "name": "check_out_time_start",
          "type": "time",
          "primaryKey": false,
          "notNull": false
        },
        "check_out_time": {
          "name": "check_out_time",
          "type": "time",
          "primaryKey": false,
          "notNull": false
        },
        "house_rules_smoking_allowed": {
          "name": "house_rules_smoking_allowed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "house_rules_events_allowed": {
          "name": "house_rules_events_allowed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "house_rules_pets_allowed": {
          "name": "house_rules_pets_allowed",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "house_rules_pets_price_type": {
          "name": "house_rules_pets_price_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "house_rules_quiet_hours": {
          "name": "house_rules_quiet_hours",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "house_rules_quiet_hours_details": {
          "name": "house_rules_quiet_hours_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_listings_short_id": {
          "name": "idx_listings_short_id",
          "columns": [
            {
              "expression": "short_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_listings_status": {
          "name": "idx_listings_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_listings_property_type_id": {
          "name": "idx_listings_property_type_id",
          "columns": [
            {
              "expression": "property_type_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_listings_listing_type_id": {
          "name": "idx_listings_listing_type_id",
          "columns": [
            {
              "expression": "listing_type_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_listings_address_city": {
          "name": "idx_listings_address_city",
          "columns": [
            {
              "expression": "address_city",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_listings_address_state": {
          "name": "idx_listings_address_state",
          "columns": [
            {
              "expression": "address_state",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_listings_latitude_longitude": {
          "name": "idx_listings_latitude_longitude",
          "columns": [
            {
              "expression": "latitude",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "longitude",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "listings_short_id_unique": {
          "name": "listings_short_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "short_id"
          ]
        }
      },
      "policies": {
        "Managers can view all listings": {
          "name": "Managers can view all listings",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (SELECT 1 FROM profiles WHERE id = auth.uid() AND user_role = 'manager')"
        },
        "Managers can create listings": {
          "name": "Managers can create listings",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (SELECT 1 FROM profiles WHERE id = auth.uid() AND user_role = 'manager')"
        },
        "Managers can update listings": {
          "name": "Managers can update listings",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (SELECT 1 FROM profiles WHERE id = auth.uid() AND user_role = 'manager')"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.owners": {
      "name": "owners",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "document_id": {
          "name": "document_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bank_details": {
          "name": "bank_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_owners_email": {
          "name": "idx_owners_email",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_owners_profile_id": {
          "name": "idx_owners_profile_id",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "owners_profile_id_profiles_id_fk": {
          "name": "owners_profile_id_profiles_id_fk",
          "tableFrom": "owners",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "owners_email_unique": {
          "name": "owners_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        },
        "owners_document_id_unique": {
          "name": "owners_document_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "document_id"
          ]
        }
      },
      "policies": {
        "Managers can view all owners": {
          "name": "Managers can view all owners",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (SELECT 1 FROM public.profiles WHERE id = auth.uid() AND user_role = 'manager')"
        },
        "Owners can view their own record": {
          "name": "Owners can view their own record",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"owners\".\"profile_id\" = auth.uid()"
        },
        "Managers can create owners": {
          "name": "Managers can create owners",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (SELECT 1 FROM public.profiles WHERE id = auth.uid() AND user_role = 'manager')"
        },
        "Managers can update owners": {
          "name": "Managers can update owners",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (SELECT 1 FROM public.profiles WHERE id = auth.uid() AND user_role = 'manager')"
        },
        "Owners can update their own record": {
          "name": "Owners can update their own record",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"owners\".\"profile_id\" = auth.uid()",
          "withCheck": "\"owners\".\"profile_id\" = auth.uid()"
        },
        "Managers can delete owners": {
          "name": "Managers can delete owners",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (SELECT 1 FROM public.profiles WHERE id = auth.uid() AND user_role = 'manager')"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_role": {
          "name": "user_role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'owner'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_profiles_email": {
          "name": "idx_profiles_email",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_profiles_user_role": {
          "name": "idx_profiles_user_role",
          "columns": [
            {
              "expression": "user_role",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profiles_id_fk": {
          "name": "profiles_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_email_unique": {
          "name": "profiles_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "Allow authenticated users to view their own profile": {
          "name": "Allow authenticated users to view their own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"profiles\".\"id\""
        },
        "Allow authenticated users to update their own profile": {
          "name": "Allow authenticated users to update their own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"profiles\".\"id\""
        },
        "Managers can view all profiles": {
          "name": "Managers can view all profiles",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (SELECT 1 FROM public.profiles WHERE id = auth.uid() AND user_role = 'manager')"
        },
        "Managers can create profiles": {
          "name": "Managers can create profiles",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (SELECT 1 FROM public.profiles WHERE id = auth.uid() AND user_role = 'manager')"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}